name: ci

on:
    push:
      tags: [ "*" ]
      branches:
        - 'main'
    pull_request:
      branches: [ "**" ]


env:
  # Use docker.io for Docker Hub if empty
  REGISTRY: docker.io
  IMAGE_NAME: ${{ secrets.DOCKERHUB_USERNAME }}/my-app
  SHA: ${{ github.event.pull_request.head.sha || github.event.after }}
  # Use `latest` as the tag to compare to if empty, assuming that it's already pushed
  COMPARE_TAG: latest

jobs:
  docker:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-go@v4
        with:
          go-version: '1.22'
          cache: false

      ## Unit testing
      - name: Run Unit Tests
        run: |
            go test ./...

      ## Linting and validation
      - name: Run Audit
        run: |
            go vet ./...
            go run honnef.co/go/tools/cmd/staticcheck@latest -checks=all,-ST1000,-U1000 ./...
            govulncheck ./...
            go mod verify
            go test -race -vet=off  -cover ./...

      - name: Run golangci-lint
        uses: golangci/golangci-lint-action@v3.4.0

      - name: Run Gosec Security Scanner
        uses: securego/gosec@master
        with:
          args: ./...

      ## Detect secrets in code

      - name: detect secrets
        uses: edplato/trufflehog-actions-scan@v0.9l-beta

      ## Code scanning

      - name: SonarQube Scan
        uses: kitabisa/sonarqube-action@v1.2.0
        with:
            host: ${{ secrets.SONARQUBE_HOST }}
            login: ${{ secrets.SONARQUBE_TOKEN }}

      ### Container building and scanning

      - uses: actions/checkout@v2 
      - name: Hadolint Action
        uses: hadolint/hadolint-action@v3.1.0
        with:
          dockerfile: Dockerfile

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          labels: |
              org.opencontainers.image.revision=${{ env.SHA }}        
          tags: |
              type=edge,branch=$repo.default_branch
              type=semver,pattern=v{{version}}
              type=sha,prefix=,suffix=,format=short

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Docker Scout
        id: docker-scout
        uses: docker/scout-action@v1
        with:
            command: cves,recommendations
            image: ${{ steps.meta.outputs.tags }}
            github-token: ${{ secrets.GITHUB_TOKEN }}
